@using OTOMCollapse.Helpers;

@if (Model == null)
{
    <text>@ViewData.ModelMetadata.NullDisplayText</text>
}
    @*else if (ViewData.TemplateInfo.TemplateDepth > 1)
        {
            <text>@ViewData.ModelMetadata.SimpleDisplayText</text>
        }*@
else
{
    <section>
        @foreach (var prop in ViewData.ModelMetadata.Properties.Where(pm => pm.ShowForDisplay && !ViewData.TemplateInfo.Visited(pm)))
        {
            
            //HelpText HelpText = AttributeUtilities.GetFirstAttribute<HelpText>(prop);
            
            OTOMCollapse.Infrastructure.MaximumRepeatGroupsAttribute max = AttributeUtilities.GetFirstAttribute<OTOMCollapse.Infrastructure.MaximumRepeatGroupsAttribute>(prop);
            

          
            //var CustomAttributes = ViewData.ModelMetadata.ContainerType.GetProperty(ViewData.ModelMetadata.PropertyName).GetCustomAttributes(typeof(T1), false);

            if (prop.HideSurroundingHtml)
            {
                <text>@Html.Editor(prop.PropertyName)</text>
            }
            else
            {
                
                <div class="form-group">
                    <label class="col-md-4 control-label" for="passwordinput">@Html.Label(prop.PropertyName)</label>
                    <div class="col-md-4">
                        <div class="sqmPreInputLabel">
                            @*@((PreText == null) ? "" : PreText.PreTextLabel)*@
                        </div>
                        @Html.Editor(prop.PropertyName)
                        
                        @*@if (prop.ContainerType.IsSubclassOf(typeof(OTOMCollapse.ViewModels.RepeatGroupBase)) && ViewData.ModelMetadata.Properties.Last().PropertyName == prop.PropertyName)
                        {
                            <input type="button" value="Remove" style="float:right;" data-placeholderelementidtoremove=@Html.Raw("placeholder" + ViewData["idToAppend"]) data-mappedaddelementid=@Html.Raw("add" + ViewData["idToAppend"]) />
                        }*@
                        @*@Html.Partial("_Suffix")*@
                        @*@if (HelpText != null)
                        {
                            <div class="sqmHelpIcon" data-tooltip="@HelpText.Advice">
                                <img draggable="false" width="16px " src="~/EmbeddedResources?pathInfo=Content/Images/help_icon.png" />
                                @*<a class="dqmHelpIcon"><span class="badge">?</span>@*</a>*@
                            </div>
                        @*}*@
                        @Html.ValidationMessage(prop.PropertyName)
                    </div>
                        <br/>
                         @Html.RenderRemoveButton(prop.PropertyName)
                        if (max != null)
                        {
                            <br/>
                            @Html.RenderAddMoreButton(max.Value, prop.PropertyName, prop.ContainerType.FullName, prop.Model)
                        }
    
                @*</div>*@
            }
        }
</section>
}


