@model OTOMCollapse.Models.ViewModels.PropertyOwners.PropertyOwnersViewModel

@{
    ViewBag.Title = "Create";
}

@Styles.Render("~/Content/CustomStyles/RepeatGroups_Tabs.css")
@Styles.Render("~/Content/CustomStyles/Accordion.css")

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <legend>PropertyOwners</legend>
    <section>
        <article>
            <div class="editor-label">
                @Html.LabelFor(model => model.CompanyStatus)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.CompanyStatus, Model.CompanyStatuses,"-- Please Select --", new { @class = "dropDownList" })
            </div>
        </article>

        <article>
            <div class="editor-label">
                @Html.LabelFor(model => model.Sprinklers)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.Sprinkler, Model.Sprinklers, "-- Please Select --", new { @class = "dropDownList" })
            </div>
        </article>

        <label id="dropDownValueSelector"></label>

        <section class="tabs">
            <ul class="tabHeader">
                <li><a href="#declarationQuestionsTab" class="active">@Html.DisplayNameFor(model => model.DeclarationQuestions) </a></li>
                <li><a href="#standardQuestionsTab">@Html.DisplayNameFor(model => model.StandardQuestions)</a></li>
                <li><a href="#propertyDetailsQuestionsTab">@Html.DisplayNameFor(model => model.PropertyDetailsQuestions)</a></li>
                <li><a href="#generalCoversQuestionsTab">@Html.DisplayNameFor(model => model.GeneralCoversQuestions)</a></li>
                <li><a href="#claimsHistoryQuestionsTab">@Html.DisplayNameFor(model => model.ClaimsHistoryQuestions)</a></li>
            </ul>

            <section class="tabBodyContainer">
                <section id="declarationQuestionsTab">
                    @Html.EditorFor(model => model.DeclarationQuestions)
                    <input type="button" data-href="#standardQuestionsTab" class="tabNextButton" value="Next"/>
                </section>
            
                <section id="standardQuestionsTab">
                    @Html.EditorFor(model => model.StandardQuestions)
                    <input type="button" data-href="#propertyDetailsQuestionsTab" class="tabNextButton" value="Next" />
                </section>

                @*<section id="propertyDetailsQuestionsTab">
                    @Html.EditorFor(model => model.PropertyDetailsQuestions)
                    <input type="button" data-href="#propertyDetailsQuestionsTab" class="tabNextButton" value="Next" />
                </section>*@
            
            </section>

        </section>

        @*<section class="accordion">
            <section class="accordion-section">
                <a class="accordion-section-title" href="#accordion-declarationQuestions">
                    @Html.DisplayNameFor(model => model.DeclarationQuestions)
                </a>
                <section id="accordion-declarationQuestions" class="accordion-section-content">
                    @Html.EditorFor(model => model.DeclarationQuestions)
                </section>
            </section>
        </section>*@





        <p>
            <input type="submit" value="Create" />
        </p>
    </section>
    
    @*@Html.Partial(@"Partial\TabTest")*@
    
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/CustomScripts/PropertyRepeatGroup.js")
    @Scripts.Render("~/Scripts/CustomScripts/SectionsEventHandlers.js")
    @Scripts.Render("~/Scripts/CustomScripts/DropDowns.js")
    @Scripts.Render("~/Scripts/CustomScripts/GenericListStyle.js")
}
