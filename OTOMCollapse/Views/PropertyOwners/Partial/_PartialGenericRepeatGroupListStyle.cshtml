﻿@model OTOMCollapse.ViewModels.RepeatGroupBase

@{
  int index = (int)ViewData["Index"];
  string propertyName = (string)ViewData["property"];

  string htmlTemplateFieldPrefix = (string)ViewData["htmlFieldPrefix"];
  htmlTemplateFieldPrefix = htmlTemplateFieldPrefix.Substring(0, (htmlTemplateFieldPrefix.Length - 3));
  htmlTemplateFieldPrefix = String.Format("{0}[{1}]", htmlTemplateFieldPrefix, index);
  ViewData.Remove("Index");
  //var x = Model.GetTemplateName(propertyName);
  }

         
                    
                @*<input type="hidden" name=@Html.Raw((templateInfo.Substring(0,(templateInfo.Length - 3))) + ".Index") value=@index />*@
                
                <section>
                    @Html.EditorForModel("", htmlTemplateFieldPrefix)
                </section>
                
                @*@{if (index > 0)
                 {
                    <input type="button" value="Remove" style="float:right;" data-placeholderelementidtoremove=@Html.Raw("placeholder" + ViewData["idToAppend"] + index) data-mappedaddelementid=@Html.Raw("add" + ViewData["idToAppend"]) />
                 }}*@
        
        


        

