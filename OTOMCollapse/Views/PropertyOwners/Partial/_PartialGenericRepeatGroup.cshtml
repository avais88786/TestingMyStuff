


@{string property = (String)ViewData["RepeatGroupName"];
  var expression = ViewData["Expression"];
  }



    @Html.Hidden("MaxPropertyRepeatValue", 10)
            @for (int i = 0; i < 10; i++)
            {
                <div id="tabHeader_@i" class="tabHeader ">

                    @*@if (i > 0) {
                        <div id="tabRemove" class="tabRemove">X</div>
                        }*@
                    <div id="tabHeaderSelector_@i" class="tabHeaderSelector"></div>

                    @Html.Raw("Property " + (i + 1))
                </div>
            }
            <div id="tabAdd" class="tabAdd">+</div>

            @for (int i = 0; i < 10; i++)
            {

                <div id="tabBody_@i" class="tabBody">
                    Property Id : @i
                    @*@{Model.Properties.Add(new PropertyRepeatGroup(Model.PropertyLocations.ToList()));}*@
                    @{var x = new PropertyDetailsGroupViewModel();}
                    
                    @*@Html.EditorForRepeatGroup(property, i);*@
                    @*@Html.EditorFor((PropertyRepeatGroup)Model.Properties[i])*@

                </div>
            }
        }
        @Html.Hidden("currentPropertyRepeatGroupId_Tab", 0)
        @Html.Hidden("selectedPropertyRepeatGroupId_Tab", 0)
        @Html.Label("Add property", new { id = "addProperty_Tab", style = "text-decoration:underline;color:red;cursor:pointer;" })
    

 
  
