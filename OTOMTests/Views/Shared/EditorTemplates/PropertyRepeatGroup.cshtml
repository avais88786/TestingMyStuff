@model PropertyRepeatGroup


    <div class="editor-label">
        @Html.LabelFor(model => model.PropertyId)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.PropertyId)
    </div>
 
    <div class="editor-label">
        @Html.LabelFor(model => model.PropertyType)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.PropertyType)
        @Html.ValidationMessageFor(model => model.PropertyType)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.PropertyPercentage)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.PropertyPercentage)
        @Html.ValidationMessageFor(model => model.PropertyPercentage)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.PurchaseDate)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.PurchaseDate)
        @Html.ValidationMessageFor(model => model.PurchaseDate)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.YearBuilt)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.YearBuilt)
        @Html.ValidationMessageFor(model => model.YearBuilt)
    </div>

<div class="nestedRepeatGroupContainer">
    @{int maxLocations = Html.MaxRepeatGroupValue(model => model.Location);
    for (int i = 0; i < maxLocations; i++)
    {   
        <div id="nestedTabHeader_@i" class="tabHeader">
            <div id="tabHeaderSelector_@i" class="tabHeaderSelector"></div>
            @Html.Raw("Location " + (i+1))
        </div>
    }
    <div id="locationTabAdd" class="tabAdd">+</div>

    for (int i = 0; i < maxLocations; i++)
    {
        <div id="nestedTabBody_@i" class="tabBody">
            @{ Model.Location.Add(new OTOMTests.Model.RepeatGroups.Location());}
            @*@Html.EditorFor(model => model.Location[i]);*@
            @Html.Partial("EditorTemplates/LocationRepeatGroup", Model.Location[i])
        </div>
    }

}
</div>



    <div class="editor-field">
        @Html.EditorFor(model => model.Address)
     </div>
   



    